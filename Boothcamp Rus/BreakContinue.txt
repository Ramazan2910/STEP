
Операторы break и continue позволяют управлять поведением циклов в Python.

1. break:
Оператор break используется внутри цикла (например, for или while) и служит для прерывания выполнения цикла. Когда интерпретатор встречает оператор break, он немедленно выходит из цикла и продолжает выполнение кода после цикла.
Пример:

fruits = ['яблоко', 'банан', 'груша', 'апельсин', 'слива']
for fruit in fruits:
    if fruit == 'груша':
        break
    print(fruit)

В этом примере цикл for перебирает элементы списка fruits, и если встречается слово "груша", цикл прерывается. Результат будет:

яблоко
банан


2. continue:
Оператор continue также используется внутри цикла и служит для перехода к следующей итерации цикла, минуя оставшуюся часть текущей итерации. Когда интерпретатор встречает оператор continue, он пропускает оставшийся код текущей итерации и переходит к следующей итерации цикла.
Пример:

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
for num in numbers:
    if num % 2 == 0:
        continue
    print(num)

В этом примере цикл for перебирает числа от 1 до 10, и если число четное, оператор continue пропускает его, и выводится только нечетные числа:

1
3
5
7
9


Операторы break и continue предоставляют возможность более гибкого управления поведением циклов, и их правильное использование может существенно упростить решение определенных задач.

=============================================================================


##################################################################

# i = 0
# while i<5:
#     print(i)
#     break
#     i+=1
#
# print('step')
#
#
# while True:
#     choice = int(input('Your choice: '))
#     if choice == 1:
#        print('add')
#     elif choice == 2:
#         print('delete')
#     elif choice == 3:
#         print('exit')
#         break
#


# i = 0
# while i<5:
#     print(i)
#     i+=1
#     continue


i = 0
while i<15:
    i += 1
    if i == 7:
        continue
    print(i)



